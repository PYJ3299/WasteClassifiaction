import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.utils import to_categorical


data = pd.read_csv('letter-recognition.csv')
X = data.iloc[:, 1:].values
y = data.iloc[:, 0].values


le = LabelEncoder()
y = le.fit_transform(y)
y = to_categorical(y)


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = Sequential([
    Dense(64, input_shape=(16,), activation='relu'),
    Dense(64, activation='relu'),
    Dense(26, activation='softmax')
])


model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
history=model.fit(X_train, y_train, epochs=10, batch_size=32, verbose=1)

loss, acc = model.evaluate(X_test, y_test)
print("Test Accuracy:", acc)

import matplotlib.pyplot as plt


plt.plot(history.history['accuracy'], label='Accuracy')
plt.plot(history.history['loss'], label='Loss')
plt.xlabel('Epoch')
plt.ylabel('Value')
plt.title('Training Accuracy and Loss')
plt.legend()
plt.grid(True)
plt.show()
